# Multi-stage build for Node.js services
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production

# Copy source code
COPY . .

# Production stage
FROM node:18-alpine

# Install dumb-init for proper signal handling
RUN apk add --no-cache dumb-init

# Create non-root user
RUN addgroup -g 1001 -S screenshare && \
    adduser -u 1001 -S screenshare -G screenshare

# Set working directory
WORKDIR /app

# Copy package files and dependencies
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/node_modules ./node_modules

# Copy source code
COPY --from=builder /app/signaling-server.js ./
COPY --from=builder /app/config.js ./

# Change ownership
RUN chown -R screenshare:screenshare /app

# Switch to non-root user
USER screenshare

# Expose ports
EXPOSE 3000

# Allow overriding port via env
ENV PORT=3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:${PORT}/health || exit 1

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Start signaling server
CMD ["node", "signaling-server.js"]

